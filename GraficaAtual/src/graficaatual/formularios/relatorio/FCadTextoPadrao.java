/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graficaatual.formularios.relatorio;


import graficaatual.daos.relatorio.TextoPadraoDAO;
import graficaatual.entidades.relatorio.Entidade;
import graficaatual.entidades.relatorio.TextoPadrao;
import graficaatual.utilitarios.ValidarValor;
import graficaatual.utilitarios.VisualizaRelatorio;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author si10
 */
public class FCadTextoPadrao extends javax.swing.JInternalFrame {

    // Tela
    private static int initControle;
    private int localIncusao;
    private static FCadTextoPadrao instance;
    private static FCadTextoPadrao instanceCont;
    
    //Entidades 
    private String FvaFiguraBrasao="";

    private TextoPadrao texto = null;
    private TextoPadraoDAO textoDao = new TextoPadraoDAO();
              
            
    public FCadTextoPadrao() {
        initComponents();      

        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        
        habilitaCampos(true);
        try {
            verificaTexto();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro: "+ ex.getMessage());
        }
    }
    
    public static int isInicializado() {
        return initControle;
    }
         
  public synchronized static FCadTextoPadrao getInstance() {
        if (instance == null) {
            instance = new FCadTextoPadrao();
            initControle = 1;
        }
        return instance;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        try {
            cpf = new JFormattedTextField(
                new MaskFormatter("###.###.###-##"));
            ((JFormattedTextField) cpf).setFocusLostBehavior(0);

        } catch (Exception e) {
        }
        jLabel2 = new javax.swing.JLabel();
        salvar = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txOrcamento = new javax.swing.JTextArea();
        bt_Negrito = new javax.swing.JButton();
        bt_Italico = new javax.swing.JButton();
        bt_Titulo = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        comboFonte = new javax.swing.JComboBox();
        tamanho = new javax.swing.JTextField();
        comboCor = new javax.swing.JComboBox();
        bt_fonte = new javax.swing.JButton();
        cpf = new javax.swing.JTextField();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente");
        setMinimumSize(new java.awt.Dimension(1100, 700));
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        getContentPane().setLayout(null);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setToolTipText("Cadastro de Pessoas");
        jPanel10.setMaximumSize(new java.awt.Dimension(999999, 999999));
        jPanel10.setMinimumSize(new java.awt.Dimension(1100, 700));
        jPanel10.setName(""); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(1100, 700));
        jPanel10.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CADASTRO DE TEXTOS PADRÕES");
        jPanel10.add(jLabel2);
        jLabel2.setBounds(50, 0, 970, 70);

        salvar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar2.png"))); // NOI18N
        salvar.setText("Salvar/Atualizar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        jPanel10.add(salvar);
        salvar.setBounds(260, 560, 270, 40);

        sair.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/SAIR2.png"))); // NOI18N
        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        jPanel10.add(sair);
        sair.setBounds(530, 560, 250, 40);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel1.setText("Texto:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 30, 30, 15);

        txOrcamento.setColumns(20);
        txOrcamento.setRows(5);
        jScrollPane1.setViewportView(txOrcamento);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 50, 880, 320);

        bt_Negrito.setBackground(new java.awt.Color(219, 233, 236));
        bt_Negrito.setText("<html>N");
        bt_Negrito.setToolTipText("Negrito");
        bt_Negrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_NegritoActionPerformed(evt);
            }
        });
        jPanel1.add(bt_Negrito);
        bt_Negrito.setBounds(130, 20, 37, 28);

        bt_Italico.setBackground(new java.awt.Color(219, 233, 236));
        bt_Italico.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        bt_Italico.setText("<html>I");
        bt_Italico.setToolTipText("Itálico");
        bt_Italico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ItalicoActionPerformed(evt);
            }
        });
        jPanel1.add(bt_Italico);
        bt_Italico.setBounds(170, 20, 35, 28);

        bt_Titulo.setBackground(new java.awt.Color(219, 233, 236));
        bt_Titulo.setText("<html>T");
        bt_Titulo.setToolTipText("Título");
        bt_Titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_TituloActionPerformed(evt);
            }
        });
        jPanel1.add(bt_Titulo);
        bt_Titulo.setBounds(210, 20, 39, 28);

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("<html>Fonte:");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(370, 20, 60, 28);

        comboFonte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Arial", "Times", "Courier", "Verdana", "Helvetica", "Calibri", "Impact", "Tahoma", " " }));
        comboFonte.setToolTipText("Fonte");
        jPanel1.add(comboFonte);
        comboFonte.setBounds(430, 20, 240, 28);

        tamanho.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tamanho.setText("12");
        tamanho.setToolTipText("Tamanho");
        jPanel1.add(tamanho);
        tamanho.setBounds(670, 20, 40, 28);

        comboCor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRETO", "VERMELHO", "VERDE", "AZUL", "ROSA", "AMARELO" }));
        comboCor.setToolTipText("Cor");
        jPanel1.add(comboCor);
        comboCor.setBounds(720, 20, 140, 28);

        bt_fonte.setBackground(new java.awt.Color(219, 233, 236));
        bt_fonte.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        bt_fonte.setText("<html>F");
        bt_fonte.setToolTipText("Inserir Fonte");
        bt_fonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_fonteActionPerformed(evt);
            }
        });
        jPanel1.add(bt_fonte);
        bt_fonte.setBounds(870, 20, 39, 28);

        cpf.setEditable(false);
        jPanel1.add(cpf);
        cpf.setBounds(30, 390, 59, 20);

        jTabbedPane1.addTab("Orçamento/Pedido", jPanel1);

        jPanel10.add(jTabbedPane1);
        jTabbedPane1.setBounds(50, 80, 950, 460);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Orçamento/Pedido");

        getContentPane().add(jPanel10);
        jPanel10.setBounds(0, 0, 1100, 700);
        jPanel10.getAccessibleContext().setAccessibleName("Cadastro de Pessoas");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        try {
            salvar();
            habilitaCampos(true);
            JOptionPane.showMessageDialog(this, " Salvo com Sucesso!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_salvarActionPerformed
  
    private void salvar() throws Exception {
        try {
            
            texto = textoDao.get(1);
            if (texto == null) {
               texto = new TextoPadrao();
               texto.setCodTextoPadrao(1);
            } 
                       
            setTextoPadrao();
            texto = textoDao.addTextoPadrao(texto);

        } catch (Exception e) {
            e.printStackTrace();
            throw new Exception(" Erro ao Salvar ");
        }
    }
    
    private void setTextoPadrao() throws Exception {   
        texto.setTextoOrcamento(txOrcamento.getText());
    }    
    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void bt_NegritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_NegritoActionPerformed
        txOrcamento.setText(txOrcamento.getText().replace(txOrcamento.getSelectedText(), "<b>" + txOrcamento.getSelectedText() + "</b>"));
    }//GEN-LAST:event_bt_NegritoActionPerformed

    private void bt_ItalicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ItalicoActionPerformed
        txOrcamento.setText(txOrcamento.getText().replace(txOrcamento.getSelectedText(), "<i>" + txOrcamento.getSelectedText() + "</i>"));
    }//GEN-LAST:event_bt_ItalicoActionPerformed

    private void bt_TituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_TituloActionPerformed
        txOrcamento.setText(txOrcamento.getText().replace(txOrcamento.getSelectedText(), "<h1>" + txOrcamento.getSelectedText() + "</h1>"));
    }//GEN-LAST:event_bt_TituloActionPerformed

    private void bt_fonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_fonteActionPerformed

        String txt = "<font face=" + comboFonte.getSelectedItem() + " size =" + tamanho.getText() + " color=" + getCor() + " >"
        + txOrcamento.getSelectedText() + " </font>";
        txOrcamento.setText(txOrcamento.getText().replace(txOrcamento.getSelectedText(), txt));
    }//GEN-LAST:event_bt_fonteActionPerformed
    
     private String getCor() {
        String r = "";

        switch (comboCor.getSelectedIndex()) {
            case 0:
                r = "\"black\"";
                break;
            case 1:
                r = "\"red\"";
                break;
            case 2:
                r = "\"green\"";
                break;
            case 3:
                r = "\"blue\"";
                break;
            case 4:
                r = "\"pink\"";
                break;
            case 5:
                r = "\"yellow\"";
                break;
            default:
                r = "\"black\"";
                break;
        }

        return r;
    }
    
    private void habilitaCampos(boolean b) {
        txOrcamento.setEnabled(b);
        cpf.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Italico;
    private javax.swing.JButton bt_Negrito;
    private javax.swing.JButton bt_Titulo;
    private javax.swing.JButton bt_fonte;
    private javax.swing.JComboBox comboCor;
    private javax.swing.JComboBox comboFonte;
    private javax.swing.JTextField cpf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton sair;
    private javax.swing.JButton salvar;
    private javax.swing.JTextField tamanho;
    private javax.swing.JTextArea txOrcamento;
    // End of variables declaration//GEN-END:variables

    private void verificaTexto() throws Exception {
        texto = textoDao.get(1);
        if(texto ==null){
            JOptionPane.showMessageDialog(this, " Por favor, inserir dados");
        }else{
            carregaEntidade();
        }
    }

    private void carregaEntidade() throws Exception {
        if (texto != null) {

            txOrcamento.setText(texto.getTextoOrcamento());
        }
    }
    
  
}
