/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graficaatual.formularios.cadastro;

import graficaatual.daos.FormularioDAO;
import graficaatual.daos.PermissaoDAO;
import graficaatual.daos.UsuariosDAO;
import graficaatual.daos.cadastro.ColaboradorDAO;
import graficaatual.entidades.Colaborador;
import graficaatual.entidades.Formulario;
import graficaatual.entidades.Permissao;
import graficaatual.entidades.Usuario;
import graficaatual.pesq.cadastro.CnvCadastroUsuario;
import graficaatual.utilitarios.Componentes;
import graficaatual.utilitarios.Persistencia;
import graficaatual.utilitarios.ValidarValor;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.observablecollections.ObservableCollections;

/**
 *
 * @author si10
 */
public class FCadUsuario extends javax.swing.JInternalFrame {

    private static int initControle;
    private int localIncusao;
    private static FCadUsuario instance;
    private static FCadUsuario instanceCont;

    private Colaborador colaborador = null;
    private ColaboradorDAO colaboradorDao = new ColaboradorDAO();

    private Usuario usuario = null;
    private UsuariosDAO usuarioDao = new UsuariosDAO();

    private FormularioDAO telasDao = new FormularioDAO();

    private PermissaoDAO permissaoDao = new PermissaoDAO();

    //Lista de Telas
    private List<Formulario> listaTelasCadastro = null;
    private List<Formulario> listaTelasPedidos = null;
    private List<Formulario> listaTelasRelatorios = null;
    private List<Formulario> listaTelasFinanceiro = null;
    private List<Formulario> listaTelasEstoque = null;
    private List<Formulario> listaTelasProducao = null;

//Lista Suspensa
    private List<Colaborador> listaColaboradorNome = null;

//Controle Navegação
    CnvCadastroUsuario cnvUsuario = new CnvCadastroUsuario();

    public FCadUsuario() throws Exception {
        initComponents();

        listaColaboradorNome = ObservableCollections.observableList(new LinkedList<Colaborador>());
        Componentes comp1 = new Componentes(listaColaboradorNome, false, codColaborador, nomeColaborador, this, jPanel10, nomeColaborador.getWidth(), 100);
        comp1.addCol(0, "codColaborador", " Código ", 50, Integer.class.getName());
        comp1.addCol(1, "pessoa.nome", " Nome ", 100, String.class.getName());
        comp1.bind();

        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);

        try {
            limpatela();
        } catch (Exception ex) {
            Logger.getLogger(FCadUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        atualizaTabela();
        habilitaCampos(false);
    }

    public static int isInicializado() {
        return initControle;
    }

    private void Finalizar() {

        if (localIncusao == 1) {
            instanceCont = null;
        } else {
            initControle = 0;
            instance = null;
        }
        dispose();
    }

    public synchronized static FCadUsuario getInstance() throws Exception {
        if (instance == null) {
            instance = new FCadUsuario();
            initControle = 1;
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jTextField33 = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        jTextField35 = new javax.swing.JTextField();
        jTextField36 = new javax.swing.JTextField();
        jTextField37 = new javax.swing.JTextField();
        jTextField38 = new javax.swing.JTextField();
        jTextField39 = new javax.swing.JTextField();
        jTextField40 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jTextField42 = new javax.swing.JTextField();
        jTextField43 = new javax.swing.JTextField();
        jTextField44 = new javax.swing.JTextField();
        jTextField45 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jTextField46 = new javax.swing.JTextField();
        jTextField47 = new javax.swing.JTextField();
        jTextField48 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        codColaborador = new javax.swing.JTextField();
        nomeColaborador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        login = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        checkCadastro = new javax.swing.JCheckBox();
        checkFinanceiro = new javax.swing.JCheckBox();
        checkEstoque = new javax.swing.JCheckBox();
        checkProducao = new javax.swing.JCheckBox();
        checkPedidos = new javax.swing.JCheckBox();
        checkRelatorios = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        novo = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        deletar = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabUsuario = new javax.swing.JTable();
        inicio = new javax.swing.JButton();
        anterior = new javax.swing.JButton();
        proximo = new javax.swing.JButton();
        ultimo = new javax.swing.JButton();
        confirmacao = new javax.swing.JPasswordField();
        senha = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCadastro = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePedidos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableRelatorios = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableFiananceiro = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableEstoque = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableProducao = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Castro de Usuário");
        setMinimumSize(new java.awt.Dimension(1100, 700));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        getContentPane().setLayout(null);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setToolTipText("Cadastro de Pessoas");
        jPanel10.setMaximumSize(new java.awt.Dimension(999999, 999999));
        jPanel10.setMinimumSize(new java.awt.Dimension(1100, 700));
        jPanel10.setName(""); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(1000, 700));
        jPanel10.setLayout(null);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(null);
        jPanel11.add(jTextField33);
        jTextField33.setBounds(160, 10, 90, 20);

        jTextField34.setBackground(new java.awt.Color(255, 255, 204));
        jPanel11.add(jTextField34);
        jTextField34.setBounds(340, 30, 310, 20);

        jTextField35.setBackground(new java.awt.Color(255, 255, 204));
        jPanel11.add(jTextField35);
        jTextField35.setBounds(160, 50, 490, 20);
        jPanel11.add(jTextField36);
        jTextField36.setBounds(120, 160, 80, 20);
        jPanel11.add(jTextField37);
        jTextField37.setBounds(200, 160, 470, 20);
        jPanel11.add(jTextField38);
        jTextField38.setBounds(780, 160, 140, 20);
        jPanel11.add(jTextField39);
        jTextField39.setBounds(120, 180, 80, 20);
        jPanel11.add(jTextField40);
        jTextField40.setBounds(200, 180, 470, 20);
        jPanel11.add(jTextField41);
        jTextField41.setBounds(780, 180, 140, 20);
        jPanel11.add(jTextField42);
        jTextField42.setBounds(120, 200, 80, 20);
        jPanel11.add(jTextField43);
        jTextField43.setBounds(200, 200, 310, 20);
        jPanel11.add(jTextField44);
        jTextField44.setBounds(780, 200, 140, 20);
        jPanel11.add(jTextField45);
        jTextField45.setBounds(580, 200, 90, 20);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Física", "Juridica" }));
        jPanel11.add(jComboBox2);
        jComboBox2.setBounds(160, 30, 180, 18);

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("UF: ");
        jPanel11.add(jLabel31);
        jLabel31.setBounds(510, 200, 70, 20);

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("CEP: ");
        jPanel11.add(jLabel32);
        jLabel32.setBounds(670, 200, 110, 20);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Código: ");
        jPanel11.add(jLabel33);
        jLabel33.setBounds(80, 10, 80, 20);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Data Nascimento: ");
        jPanel11.add(jLabel34);
        jLabel34.setBounds(650, 70, 140, 20);

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Número: ");
        jPanel11.add(jLabel35);
        jLabel35.setBounds(670, 160, 110, 20);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Insc. Estadual:");
        jPanel11.add(jLabel36);
        jLabel36.setBounds(650, 50, 140, 20);

        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Bairro: ");
        jPanel11.add(jLabel37);
        jLabel37.setBounds(20, 180, 100, 20);

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Logradouro: ");
        jPanel11.add(jLabel38);
        jLabel38.setBounds(20, 160, 100, 20);

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Complemento: ");
        jPanel11.add(jLabel39);
        jLabel39.setBounds(670, 180, 110, 20);

        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("Cidade: ");
        jPanel11.add(jLabel40);
        jLabel40.setBounds(20, 200, 100, 20);

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Endeço:"));
        jPanel11.add(jLabel41);
        jLabel41.setBounds(10, 130, 920, 110);

        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel42.setText("CPF/CNPJ: ");
        jPanel11.add(jLabel42);
        jLabel42.setBounds(80, 30, 80, 20);
        jPanel11.add(jTextField46);
        jTextField46.setBounds(790, 70, 130, 20);
        jPanel11.add(jTextField47);
        jTextField47.setBounds(790, 30, 130, 20);
        jPanel11.add(jTextField48);
        jTextField48.setBounds(790, 50, 130, 20);

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel43.setText("Nome/Razão Socia: ");
        jPanel11.add(jLabel43);
        jLabel43.setBounds(10, 50, 150, 20);

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("Insc. Munícipal:");
        jPanel11.add(jLabel44);
        jLabel44.setBounds(650, 30, 140, 20);

        jPanel10.add(jPanel11);
        jPanel11.setBounds(0, 0, 0, 0);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Nome:");
        jPanel10.add(jLabel1);
        jLabel1.setBounds(120, 140, 60, 15);

        codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codigoFocusLost(evt);
            }
        });
        jPanel10.add(codigo);
        codigo.setBounds(30, 90, 70, 20);

        codColaborador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codColaboradorFocusLost(evt);
            }
        });
        jPanel10.add(codColaborador);
        codColaborador.setBounds(30, 160, 80, 20);

        nomeColaborador.setBackground(new java.awt.Color(255, 255, 204));
        nomeColaborador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeColaboradorKeyReleased(evt);
            }
        });
        jPanel10.add(nomeColaborador);
        nomeColaborador.setBounds(110, 160, 340, 20);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Login:");
        jPanel10.add(jLabel5);
        jLabel5.setBounds(30, 200, 60, 20);
        jPanel10.add(login);
        login.setBounds(30, 220, 430, 20);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Senha");
        jPanel10.add(jLabel6);
        jLabel6.setBounds(30, 240, 70, 20);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Confirmação");
        jPanel10.add(jLabel3);
        jLabel3.setBounds(30, 280, 110, 20);

        checkCadastro.setBackground(new java.awt.Color(255, 255, 255));
        checkCadastro.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        checkCadastro.setText("Cadastro");
        jPanel10.add(checkCadastro);
        checkCadastro.setBounds(100, 340, 69, 23);

        checkFinanceiro.setBackground(new java.awt.Color(255, 255, 255));
        checkFinanceiro.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        checkFinanceiro.setText("Financeiro");
        jPanel10.add(checkFinanceiro);
        checkFinanceiro.setBounds(290, 360, 75, 23);

        checkEstoque.setBackground(new java.awt.Color(255, 255, 255));
        checkEstoque.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        checkEstoque.setText("Estoque");
        checkEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkEstoqueActionPerformed(evt);
            }
        });
        jPanel10.add(checkEstoque);
        checkEstoque.setBounds(100, 380, 65, 23);

        checkProducao.setBackground(new java.awt.Color(255, 255, 255));
        checkProducao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        checkProducao.setText("Produção");
        jPanel10.add(checkProducao);
        checkProducao.setBounds(290, 380, 71, 23);

        checkPedidos.setBackground(new java.awt.Color(255, 255, 255));
        checkPedidos.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        checkPedidos.setText("Pedidos");
        checkPedidos.setToolTipText("");
        jPanel10.add(checkPedidos);
        checkPedidos.setBounds(290, 340, 63, 23);

        checkRelatorios.setBackground(new java.awt.Color(255, 255, 255));
        checkRelatorios.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        checkRelatorios.setText("Relatórios");
        jPanel10.add(checkRelatorios);
        checkRelatorios.setBounds(100, 360, 73, 23);

        jLabel7.setToolTipText("");
        jLabel7.setBorder(javax.swing.BorderFactory.createTitledBorder("  Módulos  "));
        jPanel10.add(jLabel7);
        jLabel7.setBounds(30, 320, 420, 90);

        novo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/NOVO2.png"))); // NOI18N
        novo.setText("Novo Cadastro");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });
        jPanel10.add(novo);
        novo.setBounds(190, 420, 180, 40);

        salvar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar2.png"))); // NOI18N
        salvar.setText("Salvar/Atualizar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        jPanel10.add(salvar);
        salvar.setBounds(370, 420, 180, 40);

        deletar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        deletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excuir2.png"))); // NOI18N
        deletar.setText("Inativar");
        deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletarActionPerformed(evt);
            }
        });
        jPanel10.add(deletar);
        deletar.setBounds(550, 420, 180, 40);

        sair.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/SAIR2.png"))); // NOI18N
        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        jPanel10.add(sair);
        sair.setBounds(730, 420, 180, 40);

        tabUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Colaborador", "login", "Data Cadastro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabUsuario);

        jPanel10.add(jScrollPane1);
        jScrollPane1.setBounds(20, 470, 1020, 160);

        inicio.setText("||<<");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });
        jPanel10.add(inicio);
        inicio.setBounds(430, 640, 57, 23);

        anterior.setText("<<");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        jPanel10.add(anterior);
        anterior.setBounds(490, 640, 49, 23);

        proximo.setText(">>");
        proximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proximoActionPerformed(evt);
            }
        });
        jPanel10.add(proximo);
        proximo.setBounds(540, 640, 49, 23);

        ultimo.setText(">>||");
        ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ultimoActionPerformed(evt);
            }
        });
        jPanel10.add(ultimo);
        ultimo.setBounds(590, 640, 57, 23);

        confirmacao.setText("jPasswordField1");
        jPanel10.add(confirmacao);
        confirmacao.setBounds(30, 300, 280, 20);

        senha.setText("jPasswordField1");
        jPanel10.add(senha);
        senha.setBounds(30, 260, 280, 20);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Código ");
        jPanel10.add(jLabel2);
        jLabel2.setBounds(30, 70, 60, 20);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Código ");
        jPanel10.add(jLabel8);
        jLabel8.setBounds(30, 140, 60, 15);

        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Colaborador"));
        jPanel10.add(jLabel4);
        jLabel4.setBounds(20, 120, 440, 80);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("CADASTRO DE USUÁRIO");
        jPanel10.add(jLabel9);
        jLabel9.setBounds(0, 0, 1130, 70);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jTableCadastro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Tela", "Tela", "Acesso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCadastro);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 10, 520, 290);

        jTabbedPane1.addTab("Cadastros", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jTablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Tela", "Tela", "Acesso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTablePedidos);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(20, 10, 520, 290);

        jTabbedPane1.addTab("Pedidos", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        jTableRelatorios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Tela", "Tela", "Acesso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableRelatorios);

        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(20, 10, 520, 290);

        jTabbedPane1.addTab("Relátorios", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        jTableFiananceiro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Tela", "Tela", "Acesso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableFiananceiro);

        jPanel4.add(jScrollPane5);
        jScrollPane5.setBounds(20, 10, 520, 290);

        jTabbedPane1.addTab("Financeiro", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(null);

        jTableEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Tela", "Tela", "Acesso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTableEstoque);

        jPanel5.add(jScrollPane6);
        jScrollPane6.setBounds(20, 10, 520, 290);

        jTabbedPane1.addTab("Estoque", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(null);

        jTableProducao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Tela", "Tela", "Acesso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTableProducao);

        jPanel6.add(jScrollPane7);
        jScrollPane7.setBounds(20, 10, 520, 290);

        jTabbedPane1.addTab("Produção", jPanel6);

        jPanel10.add(jTabbedPane1);
        jTabbedPane1.setBounds(480, 70, 560, 340);

        getContentPane().add(jPanel10);
        jPanel10.setBounds(0, 0, 1100, 700);
        jPanel10.getAccessibleContext().setAccessibleName("Cadastro de Pessoas");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkEstoqueActionPerformed

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        try {
            limpatela();
            habilitaCampos(true);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, " Erro ao limpar:  " + e.getMessage());
        }

    }//GEN-LAST:event_novoActionPerformed

    private void nomeColaboradorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeColaboradorKeyReleased
        try {
            List<Colaborador> merged = colaboradorDao.getList(12,
                    "select e from Colaborador e where e.ativo ='true' and lower ( trim(e.pessoa.nome) ) like ?1 order by e.pessoa.nome",
                    nomeColaborador.getText().trim().toLowerCase() + "%");
            listaColaboradorNome.clear();
            listaColaboradorNome.addAll(merged);
        } catch (Exception e) {
            System.out.println("Ocorreu um erro ao tentar pesquisar Colaborador. Erro: " + e);
        }
    }//GEN-LAST:event_nomeColaboradorKeyReleased

    private void codColaboradorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codColaboradorFocusLost
        try {
            carregaColaborador();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_codColaboradorFocusLost

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        try {
            salvarUsuario();
            atualizaTabela();
            habilitaCampos(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_salvarActionPerformed

    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        try {
            if (cnvUsuario == null) {
                atualizaTabela();
            } else {
                cnvUsuario.primeiro();
                atualizarTabelaCad();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_inicioActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        try {
            if (cnvUsuario == null) {
                atualizaTabela();
            } else {
                cnvUsuario.anterior();
                atualizarTabelaCad();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_anteriorActionPerformed

    private void proximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proximoActionPerformed
        try {
            if (cnvUsuario == null) {
                atualizaTabela();
            } else {
                cnvUsuario.proximo();
                atualizarTabelaCad();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_proximoActionPerformed

    private void ultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ultimoActionPerformed
        try {
            if (cnvUsuario == null) {
                atualizaTabela();
            } else {
                cnvUsuario.ultimo();
                atualizarTabelaCad();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_ultimoActionPerformed

    private void deletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletarActionPerformed
        try {
            if (usuario != null) {
                Integer resp = JOptionPane.showConfirmDialog(this, "Deseja realmente Inativar esse Usuário.");
                if (resp == 0) {
                    inativar();
                    atualizaTabela();
                    habilitaCampos(false);
                }
            } else {
                throw new Exception(" Por Favor, Selecione um Usuário.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_deletarActionPerformed

    private void inativar() throws Exception {
        usuario.setAtivo(false);
        usuarioDao.addUsuario(usuario);
        limpatela();

    }

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void codigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codigoFocusLost
         try {
            carregaUsuario();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        } 
    }//GEN-LAST:event_codigoFocusLost

    private void tabUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabUsuarioMouseClicked
        try {
            if (evt.getClickCount() > 1) {
                codigo.setText(("" + tabUsuario.getValueAt(tabUsuario.getSelectedRow(), 0)));
                habilitaCampos(true);
                codigoFocusLost(null);

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tabUsuarioMouseClicked

    private void atualizaTabela() {
        try {

            if (cnvUsuario == null) {
                cnvUsuario = new CnvCadastroUsuario();
            }

            cnvUsuario.iniciarNavTabela();

            cnvUsuario.primeiro();
            atualizarTabelaCad();

        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    private void atualizarTabelaCad() {

        DefaultTableModel model = (DefaultTableModel) tabUsuario.getModel();
        removeLinhas(tabUsuario);

        List<?> lv;

        lv = cnvUsuario.getLista();

        if (lv != null && !lv.isEmpty()) {

            for (Object o : lv) {
                Object[] os = (Object[]) o;
                model.addRow(os);

            }
        }
    }

    public static void removeLinhas(JTable table) {
        int n = table.getRowCount();

        DefaultTableModel model = (DefaultTableModel) table.getModel();

        for (int i = n - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anterior;
    private javax.swing.JCheckBox checkCadastro;
    private javax.swing.JCheckBox checkEstoque;
    private javax.swing.JCheckBox checkFinanceiro;
    private javax.swing.JCheckBox checkPedidos;
    private javax.swing.JCheckBox checkProducao;
    private javax.swing.JCheckBox checkRelatorios;
    private javax.swing.JTextField codColaborador;
    private javax.swing.JTextField codigo;
    private javax.swing.JPasswordField confirmacao;
    private javax.swing.JButton deletar;
    private javax.swing.JButton inicio;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCadastro;
    private javax.swing.JTable jTableEstoque;
    private javax.swing.JTable jTableFiananceiro;
    private javax.swing.JTable jTablePedidos;
    private javax.swing.JTable jTableProducao;
    private javax.swing.JTable jTableRelatorios;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField44;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JTextField jTextField46;
    private javax.swing.JTextField jTextField47;
    private javax.swing.JTextField jTextField48;
    private javax.swing.JTextField login;
    private javax.swing.JTextField nomeColaborador;
    private javax.swing.JButton novo;
    private javax.swing.JButton proximo;
    private javax.swing.JButton sair;
    private javax.swing.JButton salvar;
    private javax.swing.JPasswordField senha;
    private javax.swing.JTable tabUsuario;
    private javax.swing.JButton ultimo;
    // End of variables declaration//GEN-END:variables

    private void limpatela() throws Exception {
        codigo.setText("");
        codColaborador.setText("");
        nomeColaborador.setText("");
        login.setText("");
        senha.setText("");
        confirmacao.setText("");
        checkCadastro.setSelected(false);
        checkEstoque.setSelected(false);
        checkRelatorios.setSelected(false);
        checkPedidos.setSelected(false);
        checkFinanceiro.setSelected(false);
        checkProducao.setSelected(false);
        listaTelasCadastro = telasDao.getFormulario("CADASTRO");
        listaTelasPedidos = telasDao.getFormulario("PEDIDO");
        listaTelasRelatorios = telasDao.getFormulario("RELATORIO");
        listaTelasFinanceiro = telasDao.getFormulario("FINANCEIRO");
        listaTelasEstoque = telasDao.getFormulario("ESTOQUE");
        listaTelasProducao = telasDao.getFormulario("PRODUCAO");
        carregaTabela(jTableCadastro, listaTelasCadastro);
        carregaTabela(jTablePedidos, listaTelasPedidos);
        carregaTabela(jTableRelatorios, listaTelasRelatorios);
        carregaTabela(jTableFiananceiro, listaTelasFinanceiro);
        carregaTabela(jTableEstoque, listaTelasEstoque);
        carregaTabela(jTableProducao, listaTelasProducao);
        limpaTabela(jTableCadastro);
        limpaTabela(jTablePedidos);
        limpaTabela(jTableRelatorios);
        limpaTabela(jTableFiananceiro);
        limpaTabela(jTableEstoque);
        limpaTabela(jTableProducao);
    }
    
    private void habilitaCampos(boolean b) throws Exception {
        codigo.setEnabled(b);
        codColaborador.setEnabled(b);
        nomeColaborador.setEnabled(b);
        login.setEnabled(b);
        senha.setEnabled(b);
        confirmacao.setEnabled(b);
        checkCadastro.setEnabled(b);
        checkEstoque.setEnabled(b);
        checkRelatorios.setEnabled(b);
        checkPedidos.setEnabled(b);
        checkFinanceiro.setEnabled(b);
        checkProducao.setEnabled(b);
    }

    private void limpaTabela(JTable jTable) throws Exception {
        for (int i = 0; i < jTable.getRowCount(); i++) {
            jTable.setValueAt(false, i, 2);

        }
    }

    private void carregaColaborador() throws Exception {
        colaborador = colaboradorDao.get(ValidarValor.getInteger(codColaborador.getText()));
        if (colaborador != null && colaborador.isAtivo() ) {

            codColaborador.setText(colaborador.getCodColaborador().toString());
            nomeColaborador.setText(colaborador.getPessoa().getNome());

        } else {
            limpaCamposColaborador();
            new Exception("Por favor, inserir um código válido.");
        }
    }

    private void limpaCamposColaborador() {
        codColaborador.setText("");
        nomeColaborador.setText("");
    }

    private void carregaTabela(JTable jTable, List<Formulario> lista) {
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        if (lista == null || lista.isEmpty()) {
            model.setNumRows(0);
        } else {
            model.setNumRows(0);
            Permissao acesso = null;
            Boolean aux = null;
            for (Formulario f : lista) {
                if (usuario != null) {
                    acesso = permissaoDao.getPermissaoFormulario(usuario.getCodUsuario(), f.getCodFormulario());
                    if (acesso == null) {
                        aux = false;
                    } else {
                        aux = acesso.isAcesso();
                    }
                } else {
                    aux = false;
                }
                model.addRow(
                        new Object[]{
                            f.getCodFormulario(),
                            f.getTitulo(),
                            aux
                        }
                );

            }
            jTable.setModel(model);
        }
    }

    private void salvarUsuario() {
        EntityManager session = Persistencia.getInstance().getSessionComBegin();

        try {
            if (usuario == null) {
                usuario = new Usuario();
                
                if (usuarioDao.verificarLogin(login.getText())) {
                    throw new Exception(" Login já utilizado, por favor informar outro. ");
                }
                if (usuarioDao.verificarLogin(login.getText())) {
                    throw new Exception(" Colaborador já possui Usuário. ");
                }

            }

            if (!(senha.getText().equals(confirmacao.getText()))) {
                throw new Exception(" Por favor, Conferir senha e Confirmação as duas devem ser iguais. ");
            }
            if (colaborador == null) {
                throw new Exception(" Por favor, inserir um Colaborador ");
            }
            
            System.out.println("usuario " + usuario.getAcessoCadastro());
            System.out.println("usuario " + usuario.getAcessoPedido());
            setUsuario();
            usuario =  usuarioDao.saveOrUpdatePojo(session,usuario);
            System.out.println("usuario " + usuario.getAcessoCadastro());
            System.out.println("usuario " + usuario.getAcessoPedido());

            setPermissoes(jTableCadastro, session);
            setPermissoes(jTableEstoque, session);
            setPermissoes(jTablePedidos, session);
            setPermissoes(jTableProducao, session);
            setPermissoes(jTableFiananceiro, session);
            setPermissoes(jTableRelatorios, session);

            session.getTransaction().commit();
            session.close();

        } catch (Exception e) {
            session.getTransaction().rollback();
            session.close();
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void setUsuario() {
        usuario.setColaborador(colaborador);
        usuario.setLogin(login.getText());
        usuario.setSenha(senha.getText());
        usuario.setData(new Date());
        usuario.setAcessoCadastro(checkCadastro.isSelected());
        usuario.setAcessoPedido(checkPedidos.isSelected());
        usuario.setAcessoProducao(checkProducao.isSelected());
        usuario.setAcessoEstoque(checkEstoque.isSelected());
        usuario.setAcessoFinanceiro(checkFinanceiro.isSelected());
        usuario.setAcessoRelatorios(checkRelatorios.isSelected());
    }

    private void setPermissoes(JTable jTable, EntityManager session) throws Exception {
        //telas de Cadastro
        for (int i = 0; i < jTable.getRowCount(); i++) {
            Formulario form = telasDao.getFormulario((Integer) (jTable.getValueAt(i, 0)));
            if (form != null) {

                Permissao permissao = permissaoDao.getPermissaoFormulario(usuario.getCodUsuario(), form.getCodFormulario());
                if (permissao != null) {
                    permissao.setAcesso((boolean) jTable.getValueAt(i, 2));
                } else {
                    permissao = new Permissao();
                    permissao.setAcesso((boolean) jTable.getValueAt(i, 2));
                    permissao.setExcluir(true);
                    permissao.setSalvar(true);
                    permissao.setImprimir(true);
                    permissao.setData(new Date());
                    permissao.setFormulario(form);
                    permissao.setUsuario(usuario);
                }
                permissaoDao.saveOrUpdatePojo(session, permissao);
            } else {
                throw new Exception(" Erro: Tela Não identificada ");
            }
        }
    }

    private void carregaUsuario() throws Exception {
        usuario = usuarioDao.getUsuario(ValidarValor.getInteger(codigo.getText()));
        if (usuario != null) {
            
        codigo.setText(usuario.getCodUsuario().toString());
        codColaborador.setText(usuario.getColaborador().getCodColaborador().toString());
        carregaColaborador();
        login.setText(usuario.getLogin());
        senha.setText(usuario.getSenha());
        confirmacao.setText(usuario.getSenha());
        checkCadastro.setSelected(usuario.getAcessoCadastro());
        checkEstoque.setSelected(usuario.getAcessoEstoque());
        checkRelatorios.setSelected(usuario.getAcessoRelatorios());
        checkPedidos.setSelected(usuario.getAcessoPedido());
        checkFinanceiro.setSelected(usuario.getAcessoFinanceiro());
        checkProducao.setSelected(usuario.getAcessoProducao());
        listaTelasCadastro = telasDao.getFormulario("CADASTRO");
        listaTelasPedidos = telasDao.getFormulario("PEDIDO");
        listaTelasRelatorios = telasDao.getFormulario("RELATORIO");
        listaTelasFinanceiro = telasDao.getFormulario("FINANCEIRO");
        listaTelasEstoque = telasDao.getFormulario("ESTOQUE");
        listaTelasProducao = telasDao.getFormulario("PRODUCAO");
        carregaTabela(jTableCadastro, listaTelasCadastro);
        carregaTabela(jTablePedidos, listaTelasPedidos);
        carregaTabela(jTableRelatorios, listaTelasRelatorios);
        carregaTabela(jTableFiananceiro, listaTelasFinanceiro);
        carregaTabela(jTableEstoque, listaTelasEstoque);
        carregaTabela(jTableProducao, listaTelasProducao);

        } else {
            limpaCamposColaborador();
            new Exception("Por favor, inserir um código válido.");
        }
    }

}
