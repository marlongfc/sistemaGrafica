/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graficaatual.formularios.estoque;

import graficaatual.utilitarios.Data;
import graficaatual.utilitarios.ValidarValor;
import graficaatual.utilitarios.VisualizaRelatorio;
import java.util.HashMap;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Marlon
 */
public class FRelatorioEstoque extends javax.swing.JInternalFrame {

    // Tela
    private static int initControle;
    private static FRelatorioEstoque instance;

    private JFormattedTextField cpf;

    public FRelatorioEstoque() {

        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);

        limparTela();
    }

    public static int isInicializado() {
        return initControle;
    }

    public synchronized static FRelatorioEstoque getInstance() {
        if (instance == null) {
            instance = new FRelatorioEstoque();
            initControle = 1;
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel10 = new javax.swing.JPanel();
        try {
            cpf = new JFormattedTextField(
                new MaskFormatter("###.###.###-##"));
            ((JFormattedTextField) cpf).setFocusLostBehavior(0);

        } catch (Exception e) {
        }
        jLabel2 = new javax.swing.JLabel();
        jCRelatorio = new javax.swing.JComboBox<>();
        labelData = new javax.swing.JLabel();
        data = new javax.swing.JTextField();
        imprimir = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        codMaterial = new javax.swing.JTextField();
        checkMaterial = new javax.swing.JCheckBox();
        checkData = new javax.swing.JCheckBox();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente");
        setMinimumSize(new java.awt.Dimension(1100, 700));
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        getContentPane().setLayout(null);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setToolTipText("Cadastro de Pessoas");
        jPanel10.setMaximumSize(new java.awt.Dimension(999999, 999999));
        jPanel10.setMinimumSize(new java.awt.Dimension(1100, 700));
        jPanel10.setName(""); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(1100, 700));
        jPanel10.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("RELATÓRIOS DE ESTOQUE ");
        jPanel10.add(jLabel2);
        jLabel2.setBounds(50, 0, 970, 70);

        jCRelatorio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCRelatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o Relatório Desejado", "Entradas de Material", "Saídas de Material", "Estoque" }));
        jCRelatorio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCRelatorioItemStateChanged(evt);
            }
        });
        jPanel10.add(jCRelatorio);
        jCRelatorio.setBounds(100, 90, 430, 30);

        labelData.setBackground(new java.awt.Color(255, 255, 255));
        labelData.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelData.setText("Data");
        jPanel10.add(labelData);
        labelData.setBounds(100, 180, 100, 20);

        data.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataFocusLost(evt);
            }
        });
        jPanel10.add(data);
        data.setBounds(100, 200, 170, 20);

        imprimir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir2.png"))); // NOI18N
        imprimir.setText("Imprimir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });
        jPanel10.add(imprimir);
        imprimir.setBounds(310, 320, 250, 40);

        sair.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/SAIR2.png"))); // NOI18N
        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        jPanel10.add(sair);
        sair.setBounds(560, 320, 250, 40);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Código Material");
        jPanel10.add(jLabel1);
        jLabel1.setBounds(320, 180, 170, 16);

        codMaterial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codMaterialFocusLost(evt);
            }
        });
        jPanel10.add(codMaterial);
        codMaterial.setBounds(320, 200, 170, 20);

        checkMaterial.setBackground(new java.awt.Color(255, 255, 255));
        checkMaterial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        checkMaterial.setText("Por Material");
        checkMaterial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkMaterialItemStateChanged(evt);
            }
        });
        jPanel10.add(checkMaterial);
        checkMaterial.setBounds(320, 140, 140, 30);

        checkData.setBackground(new java.awt.Color(255, 255, 255));
        checkData.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        checkData.setText("Por Data");
        checkData.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkDataItemStateChanged(evt);
            }
        });
        checkData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDataActionPerformed(evt);
            }
        });
        jPanel10.add(checkData);
        checkData.setBounds(100, 140, 120, 30);

        getContentPane().add(jPanel10);
        jPanel10.setBounds(0, 0, 1100, 700);
        jPanel10.getAccessibleContext().setAccessibleName("Cadastro de Pessoas");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparTela() {

        jCRelatorio.setSelectedIndex(0);
        checkData.setSelected(false);
        data.setText(Data.getDate("dd/MM/yyyy"));
        checkMaterial.setSelected(false);

        codMaterial.setEnabled(false);
        data.setEnabled(false);
    }


    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        try {
            String sql = "";
            String condData = "", condMaterial = "";
            HashMap parametros = null;

            if (checkData.isSelected()) {
                condData = " and e.dataCadastro<=" + "'" + Data.getDateConvertFormat(data.getText(), "yyyy-MM-dd") + "'" /*Data.getDateSQL(data.getText())*/;

                parametros = new HashMap();
                parametros.put("dataParam", Data.getDateUtil(data.getText()));
            }

            if (checkMaterial.isSelected() && (codMaterial.getText() != null && ValidarValor.isNumeric(codMaterial.getText()))) {
                condMaterial = " and e.codMaterial=" + codMaterial.getText();
            }

            switch (jCRelatorio.getSelectedIndex()) {

                case 1:
                    sql = " select * from entradaEstoque e "
                            + " where e.cancelada=FALSE " + condData + condMaterial
                            + " order by e.dataCadastro asc";

                    new VisualizaRelatorio().visRel("graficaatual/relatorios/arquivos/entradaMaterial.jasper", "RELATÓRIO DE ENTRADA DE MATERIAL", parametros, sql);
                    break;
                case 2:
                    sql = " select * from saidaEstoque e "
                            + " where e.cancelada=FALSE " + condData + condMaterial
                            + " order by e.dataCadastro asc";

                    new VisualizaRelatorio().visRel("graficaatual/relatorios/arquivos/saidaMaterial.jasper", "RELATÓRIO DE SAÍDA DE MATERIAL", parametros, sql);
                    break;

                case 3:

                    String sql3 = "with tmpSomaEntrada as (Select t.codMaterial, t.descMaterial, t.quantMetroQuadrado, t.quantMetragemEntrada,"
                            + "                                      t.quantLitroEntrada, t.quantPesoEntrada, t.quantUnidadeEntrada,"
                            + "                                                                            "
                            + "                                      ((case when t.quantMetroQuadrado is null then 0 else t.quantMetroQuadrado end)"
                            + "                                      +(case when t.quantMetragemEntrada is null then 0 else t.quantMetragemEntrada end)  "
                            + "                                       + (case when t.quantLitroEntrada is null then 0 else t.quantLitroEntrada end)  "
                            + "                                       +(case when t.quantPesoEntrada is null then 0 else quantPesoEntrada end)"
                            + "                                      + (case when t.quantUnidadeEntrada is null then 0 else quantUnidadeEntrada end)) as quantidadeTotal"
                            + "                                       "
                            + "                                      from (select e.codMaterial as codMaterial, m.unidademedida as unidadeMedida, e.descMaterial as descMaterial, "
                            + "				      Sum(e.altura * e.largura *e.unidadesChapas) as quantMetroQuadrado, "
                            + "                                      Sum(e.metragemLinear) as quantMetragemEntrada,"
                            + "                                      Sum(e.litro) as quantLitroEntrada, Sum(e.peso) as quantPesoEntrada, Sum(e.unidade) as quantUnidadeEntrada "
                            + "                                      "
                            + "                                      from entradaEstoque e "
                            + "                                      left join material m on m.codMaterial=e.codMaterial"
                            + "                                      where e.cancelada=FALSE  "+ condData + condMaterial
                            + "                                      group by e.codMaterial, descMaterial, unidadeMedida order by e.codMaterial) as t), "
                            + "                                      "
                            + "                    tempSomaSaida as (Select t.codMaterial, t.descMaterial, t.quantMetroQuadradoSaida, t.quantMetragemSaida,"
                            + "                                      t.quantLitroSaida, t.quantPesoSaida, t.quantUnidadeSaida,"
                            + "                                      (case when t.quantMetroQuadradoSaida is null then 0 else t.quantMetroQuadradoSaida end)"
                            + "                                       +  ((case when t.quantMetragemSaida is null then 0 else t.quantMetragemSaida end) + "
                            + "                                       +  (case when t.quantLitroSaida is null then 0 else t.quantLitroSaida end)  "
                            + "                                       +  (case when t.quantPesoSaida is null then 0 else quantPesoSaida end)"
                            + "                                       +   (case when t.quantUnidadeSaida is null then 0 else quantUnidadeSaida end))  as quantidadeTotal"
                            + "                                      "
                            + "                                      from (select e.codMaterial as codMaterial, m.unidademedida as unidadeMedida, e.descMaterial as descMaterial, "
                            + ""
                            + "                                      Sum(e.altura * e.largura) as quantMetroQuadradoSaida, "
                            + "                                      Sum(e.metragemLinear) as quantMetragemSaida,"
                            + "                                      Sum(e.litro) as quantLitroSaida, Sum(e.peso) as quantPesoSaida, Sum(e.unidade) as quantUnidadeSaida "
                            + "                                      "
                            + "                                      from saidaEstoque e "
                            + "                                      left join material m on m.codMaterial=e.codMaterial"
                            + "                                      where e.cancelada=FALSE and e.aprovisionada=FALSE  "+ condData + condMaterial
                            + "                                      group by e.codMaterial, descMaterial, unidadeMedida order by e.codMaterial)  as t),"
                            + "                                      "
                            + "                                      "
                            + "                    tempSomaSaidaAprovisionada as (Select t.codMaterial, t.descMaterial, t.quantMetroQuadradoSaida, t.quantMetragemSaida,"
                            + "                                      t.quantLitroSaida, t.quantPesoSaida, t.quantUnidadeSaida,"
                            + "                                      (case when t.quantMetroQuadradoSaida is null then 0 else t.quantMetroQuadradoSaida end)"
                            + "                                      +  ((case when t.quantMetragemSaida is null then 0 else t.quantMetragemSaida end) + "
                            + "                                       +  (case when t.quantLitroSaida is null then 0 else t.quantLitroSaida end)  "
                            + "                                       +  (case when t.quantPesoSaida is null then 0 else quantPesoSaida end)"
                            + "                                       +   (case when t.quantUnidadeSaida is null then 0 else quantUnidadeSaida end)) as quantidadeTotal"
                            + "                                       "
                            + "                                       from (select e.codMaterial as codMaterial, m.unidademedida as unidadeMedida, e.descMaterial as descMaterial, "
                            + "				       Sum(e.altura * e.largura) as quantMetroQuadradoSaida, "
                            + "				       Sum(e.metragemLinear) as quantMetragemSaida,"
                            + "                                       Sum(e.litro) as quantLitroSaida, Sum(e.peso) as quantPesoSaida, Sum(e.unidade) as quantUnidadeSaida "
                            + "                                       "
                            + "                                       from saidaEstoque e "
                            + "                                       left join material m on m.codMaterial=e.codMaterial"
                            + "                                       where e.cancelada=FALSE and e.aprovisionada=true   "+ condData + condMaterial
                            + "                                       group by e.codMaterial, descMaterial, unidadeMedida order by e.codMaterial)  as t),"
                            + ""
                            + "		    tempValoresUnitarios as (select tVal.codMaterial, tVal.valUnitario from"
                            + "				      (select e.codMaterial as codMaterial, max(e.valorUnitario) as valUnitario from EntradaEstoque e "
                            + "				      where e.cancelada!=true "+ condData + condMaterial
                            + "                               group by e.codMaterial order by e.codMaterial ) as tVal)"
                            + "                                      "
                            + "                                      Select tE.codMaterial, tE.descMaterial, "  
                            + "                                      ((Case when tE.quantMetroQuadrado is null then 0 else tE.quantMetroQuadrado end) - (Case when tS.quantMetroQuadradoSaida is null then 0 else tS.quantMetroQuadradoSaida end) - (Case when tSA.quantMetroQuadradoSaida is null then 0 else tSA.quantMetroQuadradoSaida end)) as quantMetroQuadrado, "
                            + "                                      ((Case when tE.quantMetragemEntrada is null then 0 else tE.quantMetragemEntrada end) - (Case when tS.quantMetragemSaida is null then 0 else tS.quantMetragemSaida end) - (Case when tSA.quantMetragemSaida is null then 0 else tSA.quantMetragemSaida end)) as quantMetragem, "
                            + "                                      ((Case when tE.quantLitroEntrada is null then 0 else tE.quantLitroEntrada end) - (Case when tS.quantLitroSaida is null then 0 else tS.quantLitroSaida end)  - (Case when tSA.quantLitroSaida is null then 0 else tSA.quantLitroSaida end)) as quantLitro, "
                            + "                                      ((Case when tE.quantPesoEntrada is null then 0 else tE.quantPesoEntrada end) - (Case when tS.quantPesoSaida is null then 0 else tS.quantPesoSaida end)- (Case when tSA.quantPesoSaida is null then 0 else tSA.quantPesoSaida end)) as quantPeso, "
                            + "                                      ((Case when tE.quantUnidadeEntrada is null then 0 else tE.quantUnidadeEntrada end) - (Case when tS.quantUnidadeSaida is null then 0 else tS.quantUnidadeSaida end)- (Case when tSA.quantUnidadeSaida is null then 0 else tSA.quantUnidadeSaida end)) as quantUnidade, "
                            + "                                      ((Case when tE.quantidadeTotal is null then 0 else tE.quantidadeTotal end) - (Case when tS.quantidadeTotal is null then 0 else tS.quantidadeTotal end)- (Case when tSA.quantidadeTotal is null then 0 else tSA.quantidadeTotal end)) as quantTotal, "
                            + "                                      m.estoqueMinimo as estoqueMin, Case when tSA.quantidadeTotal is null then 0 else tSA.quantidadeTotal end as quantAprovisionada,"
                            + "                                      Case when ((Case when tE.quantidadeTotal is null then 0 else tE.quantidadeTotal end) - (Case when tS.quantidadeTotal is null then 0 else tS.quantidadeTotal end))<=m.estoqueMinimo then true else false end as estoqueAbaixoMinimo,"
                            + "                                      "
                            + "                                      ((Case when tE.quantidadeTotal is null then 0 else tE.quantidadeTotal end) - (Case when tS.quantidadeTotal is null then 0 else tS.quantidadeTotal end)- (Case when tSA.quantidadeTotal is null then 0 else tSA.quantidadeTotal end))* tempVal.valUnitario as valorEmDinheiro"
                            + "                                      "
                            + "                                      from tmpSomaEntrada as tE"
                            + "                                      left Join tempSomaSaida as tS on tE.codMaterial = tS.codMaterial"
                            + "                                      left Join tempSomaSaidaAprovisionada as tSA on tE.codMaterial = tSA.codMaterial "
                            + "                                      left Join tempValoresUnitarios as tempVal on tempVal.codMaterial =tE.codMaterial"
                            + "                                      left Join material as m on m.codMaterial = tE.codMaterial"
                            + "                                      "
                            + "                                      order by tE.descMaterial";
                    new VisualizaRelatorio().visRel("graficaatual/relatorios/arquivos/estoque.jasper", "Listagem de Estoque Por Data", parametros, sql3);
                    break;

                default:
                    JOptionPane.showMessageDialog(this, "Erro na seleção");
                    break;
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_imprimirActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        limparTela();
        dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void dataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataFocusLost

    }//GEN-LAST:event_dataFocusLost

    private void jCRelatorioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCRelatorioItemStateChanged
    }//GEN-LAST:event_jCRelatorioItemStateChanged

    private void codMaterialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codMaterialFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_codMaterialFocusLost

    private void checkDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkDataActionPerformed

    private void checkMaterialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkMaterialItemStateChanged
        if (checkMaterial.isSelected()) {
            codMaterial.setEnabled(true);
        } else {
            codMaterial.setEnabled(false);
        }
    }//GEN-LAST:event_checkMaterialItemStateChanged

    private void checkDataItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkDataItemStateChanged
        if (checkData.isSelected()) {
            data.setEnabled(true);
        } else {
            data.setEnabled(false);
        }
    }//GEN-LAST:event_checkDataItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkData;
    private javax.swing.JCheckBox checkMaterial;
    private javax.swing.JTextField codMaterial;
    private javax.swing.JTextField data;
    private javax.swing.JButton imprimir;
    private javax.swing.JComboBox<String> jCRelatorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JLabel labelData;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables

}
